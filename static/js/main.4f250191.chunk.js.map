{"version":3,"sources":["components/Title.jsx","components/PhraseComponent.jsx","components/AuthorComponent.jsx","components/TwitterButton.jsx","components/NextQuote.jsx","components/QuoteBox.jsx","App.js","app/store.js","index.js"],"names":["Title","className","connect","state","quotes","posi","TransitionGroup","CSSTransition","timeout","classNames","phrase","author","quote","href","icon","faTwitter","dispatch","nextQuote","type","onClick","QuoteBox","props","colors","inde","initialState","twitterLink","NEXT","createStore","action","Math","floor","random","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"2zDAQeA,EAND,kBACV,8BACI,oBAAIC,UAAU,QAAd,qC,gBCkBOC,eAPS,SAAAC,GAAK,MACzB,CACIC,OAAQD,EAAMC,OACdC,KAAMF,EAAME,QAImB,GAAxBH,EAjBS,SAAC,GAAD,IAAEE,EAAF,EAAEA,OAAQC,EAAV,EAAUA,KAAV,OACpB,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAA0CC,QAAS,IAAKC,WAAW,OAAnE,SACI,qBAAKR,UAAU,aAAf,cAA8BG,EAAOC,GAAMK,OAA3C,QADgBN,EAAOC,GAAMK,aCW1BR,eALS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAMC,OACdC,KAAMF,EAAME,QAGuB,GAAxBH,EAdS,SAAC,GAAD,IAAEE,EAAF,EAAEA,OAAOC,EAAT,EAASA,KAAT,OACxB,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAA0CC,QAAS,IAAKC,WAAW,OAAnE,SACI,oBAAGR,UAAU,aAAb,eAA6BG,EAAOC,GAAMM,WAD1BP,EAAOC,GAAMM,a,gBCMtBT,eAJS,SAAAC,GAAK,MAAK,CAC9BS,MAAOT,EAAMC,OACbC,KAAMF,EAAME,QAEuB,KAAxBH,EAPO,SAAC,GAAkB,IAAjBU,EAAgB,EAAhBA,MAAMP,EAAU,EAAVA,KAC1B,OAAQ,mBAAGJ,UAAU,cAAcY,KAAI,iDAA4CD,EAAMP,GAAMK,OAAxD,gBAAsEE,EAAMP,GAAMM,QAAjH,SAA2H,cAAC,IAAD,CAAiBG,KAAOC,WCOhJb,cAAQ,MANI,SAAAc,GAAQ,MAC/B,CACIC,UAAW,WAAOD,EAAS,CAACE,KAAK,aAI1BhB,EAVG,SAAC,GAAD,IAAEe,EAAF,EAAEA,UAAF,OACd,wBAAQhB,UAAU,cAAckB,QAASF,EAAzC,2BCeWG,EAZE,SAACC,GAAD,OAEb,sBAAKpB,UAAU,WAAf,UACQ,cAAC,EAAD,IACA,cAAC,EAAD,IACJ,sBAAKA,UAAU,mBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,WCOGC,G,MAAAA,aAPS,SAAAC,GAAK,MAC3B,CACImB,OAAQnB,EAAMmB,OACdC,KAAMpB,EAAMoB,QAIHrB,EAdH,SAAC,GAAD,IAAGoB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAX,OACR,uBAAMtB,UAAWqB,EAAOC,GAAxB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,wBCPAC,EAAe,CACjBpB,OAAQA,IACRC,KAAM,EACNoB,YAAa,GACbH,OAAQA,IACRC,KAAM,GAEJG,EAAO,OAiBEC,eAfM,WAAmC,IAAlCxB,EAAiC,uDAAzBqB,EAAcI,EAAW,uCAEnD,OAAQA,EAAOV,MACX,KAAKQ,EACD,OAAO,2BAAIvB,GAAX,IAAkBE,KAAOwB,KAAKC,MAAoB,GAAdD,KAAKE,UAAeR,KAAOM,KAAKC,MAAoB,EAAdD,KAAKE,YACnF,QACI,OAAO5B,MCZnB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACM,cAAC,EAAD,QAGVC,SAASC,eAAe,W","file":"static/js/main.4f250191.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Title = () => (\r\n    <div>\r\n        <h1 className=\"title\">Random Quote Machine</h1>\r\n    </div>\r\n)\r\n\r\nexport default Title","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\n\r\nconst PhraseComponent = ({quotes, posi}) => (\r\n    <TransitionGroup>\r\n        <CSSTransition key={quotes[posi].phrase}  timeout={700} classNames=\"fade\">\r\n            <h2  className=\"phraseText\">\"{quotes[posi].phrase}\"</h2>\r\n        </CSSTransition>\r\n    </TransitionGroup>\r\n    \r\n    \r\n)\r\n\r\nconst mapStateToProps = state =>(\r\n    {\r\n        quotes: state.quotes,\r\n        posi: state.posi\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps,{})(PhraseComponent)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst AuthorComponent = ({quotes,posi}) => (\r\n<TransitionGroup>\r\n    <CSSTransition key={quotes[posi].author}  timeout={700} classNames=\"fade\">\r\n        <p className=\"authorText\">- {quotes[posi].author}</p>\r\n    </CSSTransition>\r\n</TransitionGroup>\r\n\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    quotes: state.quotes,\r\n    posi: state.posi\r\n})\r\n\r\nexport default connect(mapStateToProps,{})(AuthorComponent)","import React from 'react'\r\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\r\nimport { connect } from 'react-redux' \r\n\r\nconst TwitterButton = ({quote,posi}) => {\r\n    return (<a className=\"buttonStyle\" href={`https://twitter.com/intent/tweet?text=\"${quote[posi].phrase}\"%20-${quote[posi].author}`}><FontAwesomeIcon icon={ faTwitter } /></a>)\r\n}\r\nconst mapStateToProps = state => ({\r\n    quote: state.quotes,\r\n    posi: state.posi\r\n})\r\nexport default connect(mapStateToProps,null) (TwitterButton)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NextQuote = ({nextQuote}) => (\r\n    <button className=\"buttonStyle\" onClick={nextQuote}>Next Quote</button>\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        nextQuote: () => {dispatch({type:'NEXT'})}\r\n    }\r\n)\r\n\r\nexport default connect(null,mapDispatchToProps)(NextQuote)","import React from 'react'\r\nimport PhraseComponent from \"./PhraseComponent\"\r\nimport AuthorComponent from \"./AuthorComponent\"\r\nimport TwitterButton from \"./TwitterButton\"\r\nimport NextQuote from \"./NextQuote\"\r\n\r\n\r\nconst QuoteBox = (props) => (\r\n    \r\n    <div className=\"quoteBox\">\r\n            <PhraseComponent  />\r\n            <AuthorComponent />\r\n        <div className=\"buttonsPlacement\">\r\n            <TwitterButton />\r\n            <NextQuote />\r\n        </div> \r\n    </div>\r\n)\r\n\r\nexport default QuoteBox","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Title from \"./components/Title\"\r\nimport QuoteBox from \"./components/QuoteBox\"\r\nimport \"./App.css\"\r\n\r\n\r\nconst App = ({ colors, inde }) => (\r\n    <main className={colors[inde]}>\r\n      <Title />\r\n      <QuoteBox />\r\n    </main>\r\n)\r\n\r\nconst mapStateToProps = state =>(\r\n  {\r\n      colors: state.colors,\r\n      inde: state.inde\r\n  }\r\n)\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from 'redux';\r\nimport { quotes, colors } from \"../assets/quotes.json\"\r\n\r\nconst initialState = {\r\n    quotes: quotes,\r\n    posi: 0,\r\n    twitterLink: \"\",\r\n    colors: colors,\r\n    inde: 0\r\n}\r\nconst NEXT = \"NEXT\"\r\n\r\nconst quoteReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type){\r\n        case NEXT:\r\n            return {...state, posi: (Math.floor(Math.random()*10)), inde: (Math.floor(Math.random()*5))}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst NextRandomQuote = () =>\r\n{\r\n    return {type: NEXT}\r\n}\r\n\r\nexport default createStore(quoteReducer);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./app/store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n            <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}